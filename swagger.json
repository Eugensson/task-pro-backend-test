{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Tasks-Pro API",
    "description": "Tasks-Pro API Documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://tp-backend-905x.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User endpoints"
    },
    {
      "name": "Boards",
      "description": "Board endpoints"
    },
    {
      "name": "Helper",
      "description": "Helper endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User loginization",
        "parameters": [],
        "requestBody": {
          "description": "Loginization's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Logout",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "summary": "Get user info",
        "security": [{ "Bearer": [] }],
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      },
      "patch": {
        "summary": "Edit user profile",
        "security": [{ "Bearer": [] }],
        "tags": ["Users"],
        "requestBody": {
          "$ref": "#/components/request/UpdateDataRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateDataResponse"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "summary": "Edit user avatar",
        "security": [{ "Bearer": [] }],
        "tags": ["Users"],
        "requestBody": {
          "$ref": "#/components/schemas/AvatarsRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/schemas/AvatarsResponse"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      }
    },
    "/api/boards": {
      "get": {
        "summary": "Get user boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "tags": ["Boards"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBoards"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      },
      "post": {
        "summary": "Create a new board",
        "security": [{ "Bearer": [] }],
        "tags": ["Boards"],
        "requestBody": {
          "$ref": "#/components/requestBodies/NewBoardRequest"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NewBoardResponse"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      }
    },
    "/api/boards/{boardID}": {
      "patch": {
        "summary": "Edit a board",
        "security": [{ "Bearer": [] }],
        "tags": ["Boards"],
        "requestBody": {
          "$ref": "#/components/requestBodies/EditBoardRequest"
        },
        "parameters": [
          {
            "name": "boardID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EditBoardResponse"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      },
      "delete": {
        "summary": "Delete a board",
        "security": [{ "Bearer": [] }],
        "tags": ["Boards"],
        "parameters": [
          {
            "name": "boardID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteBoardResponse"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Provided email already exists"
          }
        }
      }
    },
    "/api/helper": {
      "post": {
        "summary": "Send a helper email",
        "security": [{ "Bearer": [] }],
        "tags": ["Helper"],
        "requestBody": {
          "$ref": "#/components/requestBodies/HelperRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/HelperResponse"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "qwerty123"
          }
        }
      },
      "LoginizationRequest": {
        "type": "object",
        "required": ["email", "password"],

        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "required": [
          "username",
          "_id",
          "email",
          "password",
          "avatarURL",
          "theme",
          "boards",
          "token"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatar": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "boards": {
            "type": "object",
            "description": "User's password",
            "example": "qwerty123"
          },
          "token": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["token"],

        "properties": {
          "token": {
            "type": "string",
            "description": "User's JWTtoken",
            "format": "JWTtoken"
          }
        }
      },
      "ThemeRequest": {
        "type": "object",
        "required": ["token", "theme"],
        "tags": ["User"],
        "properties": {
          "token": {
            "type": "string",
            "description": "User's theme",
            "format": "JWTtoken"
          },
          "theme": {
            "type": "string",
            "description": "User's requested theme",
            "example": "LIGHT"
          }
        }
      },
      "AvatarsRequest": {
        "type": "file",
        "required": ["token", "avatar"],
        "tags": [{ "name": "User" }],
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "format": "token"
            },
            "avatar": {
              "type": "file",
              "description": "User's avatar"
            }
          }
        }
      },
      "AvatarsResponse": {
        "type": "file",
        "required": ["token", "avatar"],
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "format": "token"
            },
            "avatar": {
              "type": "file",
              "description": "User's avatar"
            }
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "required": ["_id", "token", "email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "qwerty123"
          },
          "token": {
            "type": "string",
            "description": "User's token"
          }
        }
      },
      "LoginizationResponse": {
        "type": "object",
        "required": [
          "email",
          "password",
          "username",
          "avatar",
          "boards",
          "token"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatar": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "boards": {
            "type": "object",
            "description": "User's password",
            "example": "qwerty123"
          },
          "token": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful operation",
            "format": "JWTtoken"
          }
        }
      },
      "ThemeResponse": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's Responseed theme",
            "example": "LIGHT"
          }
        }
      }
    },
    "request": {
      "CurrentRequest": {
        "type": "object",
        "required": ["token"],

        "properties": {
          "token": {
            "type": "string",
            "description": "User's JWTtoken",
            "format": "JWTtoken"
          }
        }
      },
      "UpdateDataRequest": {
        "type": "object",
        "required": ["token"],
        "tags": [{ "name": "User" }],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "qwerty123"
          }
        }
      }
    },
    "responses": {
      "UpdateDataResponse": {
        "type": "object",
        "required": [
          "email",
          "password",
          "username",
          "avatar",
          "boards",
          "token"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "username": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatar": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "boards": {
            "type": "object",
            "description": "User's password",
            "example": "qwerty123"
          },
          "token": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
